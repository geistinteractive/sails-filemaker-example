{
  "name": "sails-filemaker",
  "version": "0.2.1",
  "description": "filemaker adapter for Sails / Waterline",
  "main": "FileMakerAdapter.js",
  "scripts": {
    "test": "node test/integration/runner -R spec -b"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/geistinteractive/sails-filemaker.git"
  },
  "keywords": [
    "filemaker",
    "adapter",
    "sails",
    "waterline",
    "sails.js",
    "plugin"
  ],
  "author": {
    "name": "toddgeistnp"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "dependencies": {
    "async": "^1.2.1",
    "fms-js": "^0.2.6",
    "lodash": "^3.9.3"
  },
  "devDependencies": {
    "waterline-adapter-tests": "~0.10.0",
    "mocha": "*",
    "captains-log": "~0.11.0"
  },
  "waterlineAdapter": {
    "type": "filemaker",
    "interfaces": [
      "semantic"
    ],
    "waterlineVersion": "~0.10.0"
  },
  "readme": "![image_squidhome@2x.png](http://i.imgur.com/RIvu9.png)\n\n# sails-filemaker\n\nProvides easy access to [FileMaker](http://www.filemaker.com) Databases hosted on a FileMaker Server from Sails.js & Waterline.\n\nFileMaker is a different sort of database then typically used with Sails.js. This adapter is connects through FileMaker Server's Custom Web Publishing interface. [see guide](https://fmhelp.filemaker.com/docs/14/en/fms14_cwp_guide.pdf).\n\n### Installation\n\nTo install this adapter, run:\n\n```sh\n$ npm install sails-filemaker\n```\n\n### Usage\n\nThis adapter exposes the following methods:\n\n###### `find()`\n\n+ **Status**\n  + implemented\n\n###### `create()`\n\n+ **Status**\n  + implemented\n\n###### `update()`\n\n+ **Status**\n  + implemented\n\n###### `destroy()`\n\n+ **Status**\n  + implemented\n\n\n### Interfaces\n\n\nThis adapter implements the [semantic]() interfaces.\nFor more information, check out this repository's [FAQ](./FAQ.md) and the [adapter interface reference](https://github.com/balderdashy/sails-docs/blob/master/adapter-specification.md) in the Sails docs.\n\n### FileMaker Specific Usage\n\nIn `config/connections.js` create an entry for your FileMaker Server and Database, like any other adapter\n\n```javascript\n'MyFMDataBase' : {\n  host: '<your server address>',\n  database : 'DatabaseName',\n  userName: '<userName>',\n  password : '<password>'\n}\n```\n\nYou can create more then one connection to the same server. Perhaps you need to connect to a second Database...\n\n```javascript\n'MyOtherFMDataBase' : {\n  host: '<your server address>',\n  database : 'AnotherDatabaseName',\n  userName: '<userName>',\n  password : '<password>'\n}\n```\n\nFileMaker's Custom Web Publishing uses Layouts to access the underlying tables. So Sails models for filemaker connect to Layouts not Tables. Layouts are sort of like views in that they specify a table, and a set of fields. They can even specify a set of related records and fields.  But they do not specify queries.\n\nThis adapter follows the Sails convention of using the file name to derive the layout name. So a User.js model file will connect to a User layout in FileMaker.  If you want to use a different name for your layout, you can set the \"tableName\" property on the model.\n\nFor example\n\n```json\ntableName : 'webContacts'\n```\nWould tell the model to connect to a layout named \"webContacts\", regardless of it's file name.\n\nThis is useful for FileMaker, since it is a common practice to use naming conventions to denote layouts that are only used for web access.\n\n\n\nCheck out **Connections** in the Sails docs, or see the `config/connections.js` file in a new Sails project for information on setting up adapters.\n\n### Running the tests\n\nYou will need to load the ContactsTest.fmp12 file on to your FileMaker Server. There is a copy of this file in `test/fixtures/ContactsTest.fmp12`\n\nIf your Server is not on localhost you will need to change the config in `test/integration/runner.js`\n\n```javascript\n  // Default adapter config to use.\n  config: {\n    schema: false,\n    host: '<localhost>', // change to your server\n    database: 'ContactsTest',\n    userName: 'admin',\n    password: ''\n  }\n  ```\n\n\nThen in your adapter's directory, run:\n\n```sh\n$ npm test\n```\n\n\n\n### Questions?\n\nSee [`FAQ.md`](./FAQ.md).\n\n\n\n### More Resources\n\n- [Stackoverflow](http://stackoverflow.com/questions/tagged/sails.js)\n- [#sailsjs on Freenode](http://webchat.freenode.net/) (IRC channel)\n- [Twitter](https://twitter.com/sailsjs)\n- [Professional/enterprise](https://github.com/balderdashy/sails-docs/blob/master/FAQ.md#are-there-professional-support-options)\n- [Tutorials](https://github.com/balderdashy/sails-docs/blob/master/FAQ.md#where-do-i-get-help)\n- <a href=\"http://sailsjs.org\" target=\"_blank\" title=\"Node.js framework for building realtime APIs.\"><img src=\"https://github-camo.global.ssl.fastly.net/9e49073459ed4e0e2687b80eaf515d87b0da4a6b/687474703a2f2f62616c64657264617368792e6769746875622e696f2f7361696c732f696d616765732f6c6f676f2e706e67\" width=60 alt=\"Sails.js logo (small)\"/></a>\n\n\n### License\n\n**[MIT](./LICENSE)**\n&copy; 2015 [toddgeist](http://github.com/toddgeist)\n[Todd Geist](http://twitter.com/toddgeist), [geist interactive](http://www.geistinteractive.com)\n\n[Sails](http://sailsjs.org) is free and open-source under the [MIT License](http://sails.mit-license.org/).\n\n\n",
  "gitHead": "1fb21a40457247566be9c3d4fb0b0ab573b1037e",
  "bugs": {
    "url": "https://github.com/geistinteractive/sails-filemaker/issues"
  },
  "homepage": "https://github.com/geistinteractive/sails-filemaker",
  "_id": "sails-filemaker@0.2.1",
  "_shasum": "fae7488e773206e11cae7a8399bc988d1c90fe3c",
  "_from": "sails-filemaker@*"
}
